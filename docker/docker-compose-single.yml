name: energy-data-space-connector-single
services:
  ecc-provider:
    image: rdlabengpa/ids_execution_core_container:v1.11.0
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    logging:
      options:
        max-size: "200M"
    networks:
      - provider
    container_name: ecc-provider
    ports:
      - "${PROVIDER_PORT}:${INTERNAL_REST_PORT}" #Port for exposing HTTP endpoints
      - "8889:8889" #Exposed port for receiving data from another connector (REST)
      - "8086:8086" #Exposed port for receiving data from another connector (WS)
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - DATA_APP_ENDPOINT=${PROVIDER_DATA_APP_ENDPOINT} #Data APP enpoint for consuming received data
      - MULTIPART_EDGE=${PROVIDER_MULTIPART_EDGE} #Data APP endpoint multipart/mixed content type
      - MULTIPART_ECC=${MULTIPART_ECC}
      - REST_ENABLE_HTTPS=${REST_ENABLE_HTTPS}
      - IDSCP2=${IDSCP2}
      - WS_EDGE=${PROVIDER_WS_EDGE}
      - WS_ECC=${WS_ECC}
      - UC_DATAAPP_URI=http://uc-dataapp-provider:8080/platoontec/PlatoonDataUsage/1.0/
      - CLEARING_HOUSE=${CLEARING_HOUSE}
      - PUBLIC_PORT=${PROVIDER_PORT}
      - BROKER_URL=${BROKER_URL}
      - DISABLE_SSL_VALIDATION=${DISABLE_SSL_VALIDATION}
      - CACHE_TOKEN=${CACHE_TOKEN}
      - FETCH_TOKEN_ON_STARTUP=${FETCH_TOKEN_ON_STARTUP}
      - SERVER_SSL_ENABLED=${SERVER_SSL_ENABLED}
      - KEYSTORE_NAME=${KEYSTORE_NAME}
      - KEY_PASSWORD=${KEY_PASSWORD}
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      - ALIAS=${ALIAS}
      - DAPS_KEYSTORE_NAME=${PROVIDER_DAPS_KEYSTORE_NAME}
      - DAPS_KEYSTORE_PASSWORD=${PROVIDER_DAPS_KEYSTORE_PASSWORD}
      - DAPS_KEYSTORE_ALIAS=${PROVIDER_DAPS_KEYSTORE_ALIAS}
      - TRUSTORE_NAME=${TRUSTORE_NAME}
      - TRUSTORE_PASSWORD=${TRUSTORE_PASSWORD}
      - TZ=Europe/Rome
      - IS_ENABLED_DAPS_INTERACTION=${IS_ENABLED_DAPS_INTERACTION}
      - IS_ENABLED_CLEARINGHOUSE=${IS_ENABLED_CLEARINGHOUSE}
      - IS_ENABLED_USAGE_CONTROL=${IS_ENABLED_USAGE_CONTROL}
    volumes:
      - ./ecc_resources_provider:/config
      - ./ecc_cert:/cert
      - ecc_provider_log:/var/log/ecc
      - ecc_provider_sd:/sd
    extra_hosts:
      - "ecc-provider:172.17.0.1"

  uc-dataapp-provider:
    image: rdlabengpa/ids_uc_data_app_platoon:v1.5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
    logging:
      options:
        max-size: "100M"
    networks:
      - provider
    container_name: uc-dataapp-provider
    environment:
      - TZ=Europe/Rome
    expose:
      - "8080"
    volumes:
      - ./uc-dataapp_resources_provider:/etc
      - uc_provider_data:/data

  be-dataapp-provider:
    image: interstore/data-space-connector-fiware-data-app:1.0.1
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
    logging:
      options:
        max-size: "100M"
    networks:
      - provider
    container_name: be-dataapp-provider
    ports:
      - "8083:8083"
      - "9000:9000"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - DATA_APP_MULTIPART=${PROVIDER_MULTIPART_EDGE}
      - SERVER_SSL_ENABLED=${SERVER_SSL_ENABLED}
      - KEYSTORE_NAME=${KEYSTORE_NAME}
      - KEY_PASSWORD=${KEY_PASSWORD}
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      - ALIAS=${ALIAS}
      - ECC_HOSTNAME=ecc-provider
      - ECC_PORT=8887
      - TZ=Europe/Rome
      - ISSUER_CONNECTOR_URI=${PROVIDER_ISSUER_CONNECTOR_URI}
      - EXTRACT_PAYLOAD_FROM_RESPONSE=${EXTRACT_PAYLOAD_FROM_RESPONSE}
      - CONTEXT_BROKER_PROTOCOL=${CONTEXT_BROKER_PROTOCOL}
      - CONTEXT_BROKER_IP=${CONTEXT_BROKER_IP}
      - CONTEXT_BROKER_PORT=${CONTEXT_BROKER_PORT}
      - CONTEXT_BROKER_PROVIDER_PATH=${CONTEXT_BROKER_PROVIDER_PATH}
      - CONTEXT_BROKER_REGISTRATION_PATH=${CONTEXT_BROKER_REGISTRATION_PATH}
      - MONGO_HOST_IP=${MONGO_HOST_IP}
      - MONGO_HOST_PORT=${MONGO_HOST_PORT}
      - NOTARIZATION_ENABLED=${NOTARIZATION_ENABLED}
      - NOTARIZATION_PROTOCOL=${NOTARIZATION_PROTOCOL}
      - NOTARIZATION_HOST=${NOTARIZATION_HOST}
      - NOTARIZATION_PORT=${NOTARIZATION_PORT}
      - NOTARIZATION_PATH=${NOTARIZATION_PATH}
      - NOTARIZATION_NETWORK=${NOTARIZATION_NETWORK}
      - NOTARIZATION_OWNER=${NOTARIZATION_OWNER}
      - NOTARIZATION_PREFIX_FILTER_LIST=${NOTARIZATION_PREFIX_FILTER_LIST}
    volumes:
      - ./be-dataapp_resources_provider:/config
      - ./ecc_cert:/cert
      - ./be-dataapp_resources_provider/data:/data

  orion:
    image: fiware/orion-ld:0.7.0
    hostname: orion
    container_name: fiware-orion
    expose:
      - "1026"
      - "8083"
    ports:
      - "1026:1026"
    networks:
      - provider
    depends_on:
      - mongo-db
    command: -dbhost 'mongo-db' -db ${MONGO_INITDB_DATABASE} -dbuser ${MONGO_INITDB_ROOT_USERNAME} -dbpwd ${MONGO_INITDB_ROOT_PASSWORD} -statCounters -logLevel DEBUG -forwarding

  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: db-mongo
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - provider
    command: --auth --nojournal
    volumes:
      - ./data-consumer:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  local_api:
    build:
      context: local-api
      args:
        CENTRAL_REGISTRY: http://cc-cpes-248.inesctec.pt:15502/api
      dockerfile: Dockerfile
    image: local-api
    container_name: local-api
    ports:
      - "30001:30001"
    networks:
      - provider
    links:
      - be-dataapp-provider
    volumes:
      - ./ecc_cert/execution_core_container.cer:/cert/execution_core_container.cer
      - ./local-api/data/scripts/cert.sh:/cert/cert.sh
    restart: unless-stopped
    command: bash -c " ./cert/cert.sh && ./entrypoint.sh"
    
  blockchain-notarization:
    image: interstore/data-space-blockchain-notarization:1.0.2
    container_name: blockchain-notarization
    expose: [ '${SERVER_PORT}' ]
    restart: always
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SEPOLIA_API_KEY=${SEPOLIA_API_KEY}
      - MUMBAI_API_KEY=${MUMBAI_API_KEY}
      - AMOY_API_KEY=${AMOY_API_KEY}
      - MNEMONIC=${MNEMONIC}
    networks:
      - provider
      
  connector-ui:
    build:
      context: connector-ui
      dockerfile: Dockerfile
      args:
        API_URL: ${API_URL}
    image: connector-ui
    container_name: connector-ui
    volumes:
      - ./nginx-conf/ui-nginx.conf:/etc/nginx/conf.d/ui-nginx.conf
    ports:
      - "8080:8080"
    restart: always
    networks:
      - provider
    depends_on:
      - be-dataapp-provider

  dozzle:
    image: amir20/dozzle:latest
    container_name: connector-logs
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8081:8080"
    networks:
      - provider

networks:
  provider:
    driver: bridge

volumes:
  mongo-db: ~
  ecc_provider_log: {}
  ecc_provider_sd: {}
  uc_provider_data: {}
  be_dataapp_data_provider: {}
